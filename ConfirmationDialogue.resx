<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        iPP8T/0fLF9bjcsBBtoAAAAASUVORK5CYII=
</value>
  </data>
</root>